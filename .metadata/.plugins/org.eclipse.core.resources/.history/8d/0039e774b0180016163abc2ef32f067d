import java.util.ArrayList;

public class StudentList {
	private StudentNode head;
	private int length;
	
	public StudentList(){
		length = 0;
	}
	
	public void insertByLastName(Student s){
		if(length == 0){
			head = new StudentNode(s);
			length++;
		}
		else{
			int position = 0;
			StudentNode currentNode = head;
			StudentNode node = new StudentNode(s);
			if(s.getLastName().compareTo(currentNode.getValue().getLastName())<=0
					|| s.getLastName().compareTo(currentNode.getValue().getLastName())==0
							&& s.getFirstName().compareTo(currentNode.getValue().getFirstName())<0){
					head = node;
					node.setNext(currentNode);
					length++;
			}
			else{
				while(position < length-1 && (s.getLastName().compareTo(currentNode.getNext().getValue().getLastName())>=0
						|| s.getLastName().compareTo(currentNode.getNext().getValue().getLastName())==0
							&& s.getFirstName().compareTo(currentNode.getNext().getValue().getFirstName())<0)){
					position++;
					currentNode = currentNode.getNext();
			
				}
			
				StudentNode nextNode = currentNode.getNext();
				node.setNext(nextNode);
				currentNode.setNext(node);
				length++;

			}
		}
		
	}
	
	public void removeStudent(String firstName, String lastName){
		StudentNode currentNode = head;
		int position = 0;
		if(position == 0 &&
			currentNode.getValue().getFirstName().equals(firstName) && 
			currentNode.getValue().getLastName().equals(lastName)){
				head = currentNode.getNext();
				length--;
			}
		
		else{
			while(position < length-1 && 
					!(currentNode.getNext().getValue().getFirstName().equals(firstName) && 
					currentNode.getNext().getValue().getLastName().equals(lastName))){
				position++;
				currentNode = currentNode.getNext();
			}
			if(position<length-1){
				currentNode.setNext(currentNode.getNext().getNext());
				length--;
			}
			else{
				currentNode.setNext(currentNode.getNext());
				length--;
			}
		}
	}
	
	public void sortByAverage(){
		StudentNode node1 = head;
		StudentNode prevNode = null;
		for(int i = 0; i<length-1; i++){
			int min = node1.getValue().getGPA();
			StudentNode minNode = node1;
			StudentNode prevMinNode = prevNode;
			StudentNode node2 = node1.getNext();
			StudentNode prevNode2 = node1;
			for(int j = i + 1; j<length; j++){
				if(node2.getValue().getGPA()<min){
					min = node2.getValue().getGPA();
					prevMinNode = prevNode2;
					minNode = node2;
				}
				prevNode2 = node2;
				node2=node2.getNext();
			}
			if(prevNode == null) head = minNode;
			else prevNode.setNext(minNode);
			StudentNode afterMinNode = minNode.getNext();
			if(node1.getNext().equals(minNode)){
				minNode.setNext(node1);
				prevMinNode.setNext(afterMinNode);
			}
			else {
				minNode.setNext(node1.getNext());
				prevMinNode.setNext(node1);
				node1.setNext(afterMinNode);
			}
			prevNode = minNode;
			node1 = prevNode.getNext();
		}
	}
	
	public void insertByGPA(Student s){
		if(length == 0){
			head = new StudentNode(s);
			length++;
		}
		else{
			int position = 0;
			StudentNode currentNode = head;
			StudentNode node = new StudentNode(s);
			if(s.getGPA()<=currentNode.getValue().getGPA()){
					head = node;
					node.setNext(currentNode);
					length++;
			}
			else{
				while(position < length-1 && s.getGPA()>=currentNode.getNext().getValue().getGPA()){
					position++;
					currentNode = currentNode.getNext();
				}
				StudentNode nextNode = currentNode.getNext();
				node.setNext(nextNode);
				currentNode.setNext(node);
				length++;
			}
		}
		
	}
	
	public String toString(){
		String str = "";
		StudentNode currentNode = head;
		int position = 0;
		while(position < length){
			position++;
			str += currentNode.getValue().toString() + "; ";
			currentNode = currentNode.getNext();
		}
		return str;
	}
	public static void main(String[] args) {
		StudentList list = new StudentList();
		list.insertByLastName(new Student("Thomas","Edgars",89));
		list.insertByLastName(new Student("Jennifer","Smith",86));
		list.insertByLastName(new Student("Harold","Umberton",78));
		list.insertByLastName(new Student("Frank","Martin",60));
		list.insertByLastName(new Student("Jeremy","Andrews",83));
		list.insertByLastName(new Student("Laura","Roberts",93));
		list.insertByLastName(new Student("Adele","Lincoln",85));
		list.insertByLastName(new Student("Peter","Smith",91));
		list.insertByLastName(new Student("Larry","Peterson",72));
		System.out.println(list);
		list.removeStudent("Frank", "Martin");
		System.out.println(list);
		list.sortByAverage();
		System.out.println(list);
		list.insertByGPA(new Student("Alice","Henderson",96));
		System.out.println(list);

	}

}
